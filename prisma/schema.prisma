generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AdminEmail {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
}

// Mills
model Client {
  id         String  @id @default(cuid())
  name       String
  email      String  @unique
  address    String
  phone      String
  gstNumber  String
  postalCode String
  Order      Order[]
}

// Our company
model Company {
  id         String  @id @default(cuid())
  name       String
  email      String  @unique
  address    String
  phone      String
  gstNumber  String
  postalCode String
  Order      Order[]
}

model Order {
  id                  String      @id @default(cuid())
  name                String
  email               String
  address             String
  phone               String
  gstNumber           String
  postalCode          String
  additionalNotes     String?
  PurchaseOrderNumber String? // PO Number only for admins
  companyId           String?
  clientId            String?
  client              Client?     @relation(fields: [clientId], references: [id])
  company             Company?    @relation(fields: [companyId], references: [id])
  items               OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum SizeUnit {
  CM
  IN
}

model OrderItem {
  id       String  @id @default(cuid())
  orderId  String
  name     String
  gsm      String
  quantity String
  isUrgent Boolean @default(false)

  sizeA     String
  sizeB     String
  sizeAUnit SizeUnit
  sizeBUnit SizeUnit

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
}
